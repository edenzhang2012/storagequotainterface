// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.2
// source: sqi.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PluginCapability_RpcType int32

const (
	PluginCapability_UNKNOWN_RPC    PluginCapability_RpcType = 0
	PluginCapability_SET_QUOTA      PluginCapability_RpcType = 1
	PluginCapability_CLEAR_QUOTA    PluginCapability_RpcType = 2
	PluginCapability_GET_QUOTA      PluginCapability_RpcType = 3
	PluginCapability_LIST_QUOTA     PluginCapability_RpcType = 4
	PluginCapability_VALIDATE_QUOTA PluginCapability_RpcType = 5
	PluginCapability_TARGET_INFO    PluginCapability_RpcType = 6
)

// Enum value maps for PluginCapability_RpcType.
var (
	PluginCapability_RpcType_name = map[int32]string{
		0: "UNKNOWN_RPC",
		1: "SET_QUOTA",
		2: "CLEAR_QUOTA",
		3: "GET_QUOTA",
		4: "LIST_QUOTA",
		5: "VALIDATE_QUOTA",
		6: "TARGET_INFO",
	}
	PluginCapability_RpcType_value = map[string]int32{
		"UNKNOWN_RPC":    0,
		"SET_QUOTA":      1,
		"CLEAR_QUOTA":    2,
		"GET_QUOTA":      3,
		"LIST_QUOTA":     4,
		"VALIDATE_QUOTA": 5,
		"TARGET_INFO":    6,
	}
)

func (x PluginCapability_RpcType) Enum() *PluginCapability_RpcType {
	p := new(PluginCapability_RpcType)
	*p = x
	return p
}

func (x PluginCapability_RpcType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PluginCapability_RpcType) Descriptor() protoreflect.EnumDescriptor {
	return file_sqi_proto_enumTypes[0].Descriptor()
}

func (PluginCapability_RpcType) Type() protoreflect.EnumType {
	return &file_sqi_proto_enumTypes[0]
}

func (x PluginCapability_RpcType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PluginCapability_RpcType.Descriptor instead.
func (PluginCapability_RpcType) EnumDescriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{3, 0}
}

type PluginCapability_QuotaType int32

const (
	PluginCapability_UNKNOWN_QUOTA PluginCapability_QuotaType = 0
	PluginCapability_SIZE          PluginCapability_QuotaType = 1 // 限制空间大小（bytes）
	PluginCapability_INODES        PluginCapability_QuotaType = 2 // 限制文件个数（inodes）
)

// Enum value maps for PluginCapability_QuotaType.
var (
	PluginCapability_QuotaType_name = map[int32]string{
		0: "UNKNOWN_QUOTA",
		1: "SIZE",
		2: "INODES",
	}
	PluginCapability_QuotaType_value = map[string]int32{
		"UNKNOWN_QUOTA": 0,
		"SIZE":          1,
		"INODES":        2,
	}
)

func (x PluginCapability_QuotaType) Enum() *PluginCapability_QuotaType {
	p := new(PluginCapability_QuotaType)
	*p = x
	return p
}

func (x PluginCapability_QuotaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PluginCapability_QuotaType) Descriptor() protoreflect.EnumDescriptor {
	return file_sqi_proto_enumTypes[1].Descriptor()
}

func (PluginCapability_QuotaType) Type() protoreflect.EnumType {
	return &file_sqi_proto_enumTypes[1]
}

func (x PluginCapability_QuotaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PluginCapability_QuotaType.Descriptor instead.
func (PluginCapability_QuotaType) EnumDescriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{3, 1}
}

type PluginCapability_IdType int32

const (
	PluginCapability_UNKNOWN_ID PluginCapability_IdType = 0
	PluginCapability_PATH       PluginCapability_IdType = 1 // 路径作为配额id
	PluginCapability_VENDOR     PluginCapability_IdType = 2 // 存储厂商生成配额id，创建配额接口调用后，生成配额id，后面需要用这个配额id调用其他接口
)

// Enum value maps for PluginCapability_IdType.
var (
	PluginCapability_IdType_name = map[int32]string{
		0: "UNKNOWN_ID",
		1: "PATH",
		2: "VENDOR",
	}
	PluginCapability_IdType_value = map[string]int32{
		"UNKNOWN_ID": 0,
		"PATH":       1,
		"VENDOR":     2,
	}
)

func (x PluginCapability_IdType) Enum() *PluginCapability_IdType {
	p := new(PluginCapability_IdType)
	*p = x
	return p
}

func (x PluginCapability_IdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PluginCapability_IdType) Descriptor() protoreflect.EnumDescriptor {
	return file_sqi_proto_enumTypes[2].Descriptor()
}

func (PluginCapability_IdType) Type() protoreflect.EnumType {
	return &file_sqi_proto_enumTypes[2]
}

func (x PluginCapability_IdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PluginCapability_IdType.Descriptor instead.
func (PluginCapability_IdType) EnumDescriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{3, 2}
}

type QuotaTarget_Scope int32

const (
	QuotaTarget_UNKNOWN QuotaTarget_Scope = 0
	QuotaTarget_PATH    QuotaTarget_Scope = 1 // 文件系统路径
	QuotaTarget_VOLUME  QuotaTarget_Scope = 2 // 卷 ID
	QuotaTarget_TENANT  QuotaTarget_Scope = 3 // 租户
	QuotaTarget_USER    QuotaTarget_Scope = 4 // 用户
	QuotaTarget_GROUP   QuotaTarget_Scope = 5 // 组
)

// Enum value maps for QuotaTarget_Scope.
var (
	QuotaTarget_Scope_name = map[int32]string{
		0: "UNKNOWN",
		1: "PATH",
		2: "VOLUME",
		3: "TENANT",
		4: "USER",
		5: "GROUP",
	}
	QuotaTarget_Scope_value = map[string]int32{
		"UNKNOWN": 0,
		"PATH":    1,
		"VOLUME":  2,
		"TENANT":  3,
		"USER":    4,
		"GROUP":   5,
	}
)

func (x QuotaTarget_Scope) Enum() *QuotaTarget_Scope {
	p := new(QuotaTarget_Scope)
	*p = x
	return p
}

func (x QuotaTarget_Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuotaTarget_Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_sqi_proto_enumTypes[3].Descriptor()
}

func (QuotaTarget_Scope) Type() protoreflect.EnumType {
	return &file_sqi_proto_enumTypes[3]
}

func (x QuotaTarget_Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuotaTarget_Scope.Descriptor instead.
func (QuotaTarget_Scope) EnumDescriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{5, 0}
}

type PluginInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PluginInfoRequest) Reset() {
	*x = PluginInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInfoRequest) ProtoMessage() {}

func (x *PluginInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInfoRequest.ProtoReflect.Descriptor instead.
func (*PluginInfoRequest) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{0}
}

type PluginInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	VendorVersion string `protobuf:"bytes,2,opt,name=vendor_version,json=vendorVersion,proto3" json:"vendor_version,omitempty"`
}

func (x *PluginInfoResponse) Reset() {
	*x = PluginInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInfoResponse) ProtoMessage() {}

func (x *PluginInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInfoResponse.ProtoReflect.Descriptor instead.
func (*PluginInfoResponse) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{1}
}

func (x *PluginInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginInfoResponse) GetVendorVersion() string {
	if x != nil {
		return x.VendorVersion
	}
	return ""
}

type GetPluginCapabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPluginCapabilitiesRequest) Reset() {
	*x = GetPluginCapabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPluginCapabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginCapabilitiesRequest) ProtoMessage() {}

func (x *GetPluginCapabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginCapabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetPluginCapabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{2}
}

type PluginCapability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Capability:
	//
	//	*PluginCapability_Rpc
	//	*PluginCapability_Quota
	//	*PluginCapability_Id
	Capability isPluginCapability_Capability `protobuf_oneof:"capability"`
}

func (x *PluginCapability) Reset() {
	*x = PluginCapability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCapability) ProtoMessage() {}

func (x *PluginCapability) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCapability.ProtoReflect.Descriptor instead.
func (*PluginCapability) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{3}
}

func (m *PluginCapability) GetCapability() isPluginCapability_Capability {
	if m != nil {
		return m.Capability
	}
	return nil
}

func (x *PluginCapability) GetRpc() PluginCapability_RpcType {
	if x, ok := x.GetCapability().(*PluginCapability_Rpc); ok {
		return x.Rpc
	}
	return PluginCapability_UNKNOWN_RPC
}

func (x *PluginCapability) GetQuota() PluginCapability_QuotaType {
	if x, ok := x.GetCapability().(*PluginCapability_Quota); ok {
		return x.Quota
	}
	return PluginCapability_UNKNOWN_QUOTA
}

func (x *PluginCapability) GetId() PluginCapability_IdType {
	if x, ok := x.GetCapability().(*PluginCapability_Id); ok {
		return x.Id
	}
	return PluginCapability_UNKNOWN_ID
}

type isPluginCapability_Capability interface {
	isPluginCapability_Capability()
}

type PluginCapability_Rpc struct {
	Rpc PluginCapability_RpcType `protobuf:"varint,1,opt,name=rpc,proto3,enum=pb.PluginCapability_RpcType,oneof"`
}

type PluginCapability_Quota struct {
	Quota PluginCapability_QuotaType `protobuf:"varint,2,opt,name=quota,proto3,enum=pb.PluginCapability_QuotaType,oneof"`
}

type PluginCapability_Id struct {
	Id PluginCapability_IdType `protobuf:"varint,3,opt,name=id,proto3,enum=pb.PluginCapability_IdType,oneof"`
}

func (*PluginCapability_Rpc) isPluginCapability_Capability() {}

func (*PluginCapability_Quota) isPluginCapability_Capability() {}

func (*PluginCapability_Id) isPluginCapability_Capability() {}

type GetPluginCapabilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capabilities []*PluginCapability `protobuf:"bytes,1,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
}

func (x *GetPluginCapabilitiesResponse) Reset() {
	*x = GetPluginCapabilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPluginCapabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPluginCapabilitiesResponse) ProtoMessage() {}

func (x *GetPluginCapabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPluginCapabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetPluginCapabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{4}
}

func (x *GetPluginCapabilitiesResponse) GetCapabilities() []*PluginCapability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type QuotaTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope QuotaTarget_Scope `protobuf:"varint,1,opt,name=scope,proto3,enum=pb.QuotaTarget_Scope" json:"scope,omitempty"`
	Id    string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"` // 例如：/mnt/data、vol-123、tenant-a、user-xyz
}

func (x *QuotaTarget) Reset() {
	*x = QuotaTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuotaTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotaTarget) ProtoMessage() {}

func (x *QuotaTarget) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotaTarget.ProtoReflect.Descriptor instead.
func (*QuotaTarget) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{5}
}

func (x *QuotaTarget) GetScope() QuotaTarget_Scope {
	if x != nil {
		return x.Scope
	}
	return QuotaTarget_UNKNOWN
}

func (x *QuotaTarget) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SetQuotaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target     *QuotaTarget      `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	SizeBytes  uint64            `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`                                                                         // 可选：限制空间大小（单位 Byte）
	Files      uint64            `protobuf:"varint,3,opt,name=files,proto3" json:"files,omitempty"`                                                                                                  // 可选：限制文件个数（inodes）
	Parameters map[string]string `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 插件可选参数，用于扩展
}

func (x *SetQuotaRequest) Reset() {
	*x = SetQuotaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetQuotaRequest) ProtoMessage() {}

func (x *SetQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetQuotaRequest.ProtoReflect.Descriptor instead.
func (*SetQuotaRequest) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{6}
}

func (x *SetQuotaRequest) GetTarget() *QuotaTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *SetQuotaRequest) GetSizeBytes() uint64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *SetQuotaRequest) GetFiles() uint64 {
	if x != nil {
		return x.Files
	}
	return 0
}

func (x *SetQuotaRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type SetQuotaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info map[string]string `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 可选返回的其他信息，用于扩展
}

func (x *SetQuotaResponse) Reset() {
	*x = SetQuotaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetQuotaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetQuotaResponse) ProtoMessage() {}

func (x *SetQuotaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetQuotaResponse.ProtoReflect.Descriptor instead.
func (*SetQuotaResponse) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{7}
}

func (x *SetQuotaResponse) GetInfo() map[string]string {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetQuotaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *QuotaTarget `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *GetQuotaRequest) Reset() {
	*x = GetQuotaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotaRequest) ProtoMessage() {}

func (x *GetQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotaRequest.ProtoReflect.Descriptor instead.
func (*GetQuotaRequest) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{8}
}

func (x *GetQuotaRequest) GetTarget() *QuotaTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

type GetQuotaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entrie *QuotaEntry `protobuf:"bytes,1,opt,name=entrie,proto3" json:"entrie,omitempty"`
}

func (x *GetQuotaResponse) Reset() {
	*x = GetQuotaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotaResponse) ProtoMessage() {}

func (x *GetQuotaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotaResponse.ProtoReflect.Descriptor instead.
func (*GetQuotaResponse) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{9}
}

func (x *GetQuotaResponse) GetEntrie() *QuotaEntry {
	if x != nil {
		return x.Entrie
	}
	return nil
}

type ClearQuotaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *QuotaTarget `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *ClearQuotaRequest) Reset() {
	*x = ClearQuotaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearQuotaRequest) ProtoMessage() {}

func (x *ClearQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearQuotaRequest.ProtoReflect.Descriptor instead.
func (*ClearQuotaRequest) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{10}
}

func (x *ClearQuotaRequest) GetTarget() *QuotaTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

type ListQuotasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start  int32        `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Limit  int32        `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Target *QuotaTarget `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *ListQuotasRequest) Reset() {
	*x = ListQuotasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotasRequest) ProtoMessage() {}

func (x *ListQuotasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotasRequest.ProtoReflect.Descriptor instead.
func (*ListQuotasRequest) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{11}
}

func (x *ListQuotasRequest) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListQuotasRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListQuotasRequest) GetTarget() *QuotaTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

type ListQuotasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries       []*QuotaEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	ContinueToken string        `protobuf:"bytes,2,opt,name=continue_token,json=continueToken,proto3" json:"continue_token,omitempty"`
}

func (x *ListQuotasResponse) Reset() {
	*x = ListQuotasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotasResponse) ProtoMessage() {}

func (x *ListQuotasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotasResponse.ProtoReflect.Descriptor instead.
func (*ListQuotasResponse) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{12}
}

func (x *ListQuotasResponse) GetEntries() []*QuotaEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *ListQuotasResponse) GetContinueToken() string {
	if x != nil {
		return x.ContinueToken
	}
	return ""
}

type QuotaEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target           *QuotaTarget      `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	SizeBytes        uint64            `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`                                                             // 已设置的空间限制
	UsedBytes        uint64            `protobuf:"varint,3,opt,name=used_bytes,json=usedBytes,proto3" json:"used_bytes,omitempty"`                                                             // 已使用的空间大小
	SizeQuotaEnable  bool              `protobuf:"varint,4,opt,name=size_quota_enable,json=sizeQuotaEnable,proto3" json:"size_quota_enable,omitempty"`                                         // 是否设置大小配额
	Files            uint64            `protobuf:"varint,5,opt,name=files,proto3" json:"files,omitempty"`                                                                                      // 已设置的文件数限制
	UsedFiles        uint64            `protobuf:"varint,6,opt,name=used_files,json=usedFiles,proto3" json:"used_files,omitempty"`                                                             // 当前使用的文件数
	InodeQuotaEnable bool              `protobuf:"varint,7,opt,name=inode_quota_enable,json=inodeQuotaEnable,proto3" json:"inode_quota_enable,omitempty"`                                      // 是否设置文件个数配额
	Info             map[string]string `protobuf:"bytes,8,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 插件可选返回的其他信息
}

func (x *QuotaEntry) Reset() {
	*x = QuotaEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuotaEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotaEntry) ProtoMessage() {}

func (x *QuotaEntry) ProtoReflect() protoreflect.Message {
	mi := &file_sqi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotaEntry.ProtoReflect.Descriptor instead.
func (*QuotaEntry) Descriptor() ([]byte, []int) {
	return file_sqi_proto_rawDescGZIP(), []int{13}
}

func (x *QuotaEntry) GetTarget() *QuotaTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *QuotaEntry) GetSizeBytes() uint64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *QuotaEntry) GetUsedBytes() uint64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *QuotaEntry) GetSizeQuotaEnable() bool {
	if x != nil {
		return x.SizeQuotaEnable
	}
	return false
}

func (x *QuotaEntry) GetFiles() uint64 {
	if x != nil {
		return x.Files
	}
	return 0
}

func (x *QuotaEntry) GetUsedFiles() uint64 {
	if x != nil {
		return x.UsedFiles
	}
	return 0
}

func (x *QuotaEntry) GetInodeQuotaEnable() bool {
	if x != nil {
		return x.InodeQuotaEnable
	}
	return false
}

func (x *QuotaEntry) GetInfo() map[string]string {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_sqi_proto protoreflect.FileDescriptor

var file_sqi_proto_rawDesc = []byte{
	0x0a, 0x09, 0x73, 0x71, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a, 0x11,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x4f, 0x0a, 0x12, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x9f, 0x03, 0x0a, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x03, 0x72, 0x70, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x70, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x00, 0x52, 0x03, 0x72, 0x70, 0x63, 0x12, 0x36, 0x0a, 0x05, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x12, 0x2d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x7e, 0x0a, 0x07, 0x52, 0x70, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x52, 0x50, 0x43, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x53, 0x45, 0x54, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43,
	0x4c, 0x45, 0x41, 0x52, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09,
	0x47, 0x45, 0x54, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4c,
	0x49, 0x53, 0x54, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x10, 0x05, 0x12,
	0x0f, 0x0a, 0x0b, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x06,
	0x22, 0x34, 0x0a, 0x09, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e,
	0x4f, 0x44, 0x45, 0x53, 0x10, 0x02, 0x22, 0x2e, 0x0a, 0x06, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x50, 0x41, 0x54, 0x48, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x45,
	0x4e, 0x44, 0x4f, 0x52, 0x10, 0x02, 0x42, 0x0c, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x22, 0x59, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22,
	0x97, 0x01, 0x0a, 0x0b, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x2b, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x05,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x41, 0x54, 0x48, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x45, 0x4e, 0x41,
	0x4e, 0x54, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x04, 0x12, 0x09,
	0x0a, 0x05, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x05, 0x22, 0xf3, 0x01, 0x0a, 0x0f, 0x53, 0x65,
	0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x7f, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x37, 0x0a, 0x09, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x3a, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x22, 0x3c, 0x0a, 0x11, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x68, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x22, 0x65, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xe9, 0x02, 0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x69, 0x7a, 0x65, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x37, 0x0a, 0x09, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x32, 0xd9, 0x03, 0x0a, 0x0c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x13,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b, 0x0a,
	0x0a, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x14, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x64,
	0x65, 0x6e, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x31, 0x32, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f,
	0x73, 0x71, 0x69, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sqi_proto_rawDescOnce sync.Once
	file_sqi_proto_rawDescData = file_sqi_proto_rawDesc
)

func file_sqi_proto_rawDescGZIP() []byte {
	file_sqi_proto_rawDescOnce.Do(func() {
		file_sqi_proto_rawDescData = protoimpl.X.CompressGZIP(file_sqi_proto_rawDescData)
	})
	return file_sqi_proto_rawDescData
}

var file_sqi_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_sqi_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_sqi_proto_goTypes = []interface{}{
	(PluginCapability_RpcType)(0),         // 0: pb.PluginCapability.RpcType
	(PluginCapability_QuotaType)(0),       // 1: pb.PluginCapability.QuotaType
	(PluginCapability_IdType)(0),          // 2: pb.PluginCapability.IdType
	(QuotaTarget_Scope)(0),                // 3: pb.QuotaTarget.Scope
	(*PluginInfoRequest)(nil),             // 4: pb.PluginInfoRequest
	(*PluginInfoResponse)(nil),            // 5: pb.PluginInfoResponse
	(*GetPluginCapabilitiesRequest)(nil),  // 6: pb.GetPluginCapabilitiesRequest
	(*PluginCapability)(nil),              // 7: pb.PluginCapability
	(*GetPluginCapabilitiesResponse)(nil), // 8: pb.GetPluginCapabilitiesResponse
	(*QuotaTarget)(nil),                   // 9: pb.QuotaTarget
	(*SetQuotaRequest)(nil),               // 10: pb.SetQuotaRequest
	(*SetQuotaResponse)(nil),              // 11: pb.SetQuotaResponse
	(*GetQuotaRequest)(nil),               // 12: pb.GetQuotaRequest
	(*GetQuotaResponse)(nil),              // 13: pb.GetQuotaResponse
	(*ClearQuotaRequest)(nil),             // 14: pb.ClearQuotaRequest
	(*ListQuotasRequest)(nil),             // 15: pb.ListQuotasRequest
	(*ListQuotasResponse)(nil),            // 16: pb.ListQuotasResponse
	(*QuotaEntry)(nil),                    // 17: pb.QuotaEntry
	nil,                                   // 18: pb.SetQuotaRequest.ParametersEntry
	nil,                                   // 19: pb.SetQuotaResponse.InfoEntry
	nil,                                   // 20: pb.QuotaEntry.InfoEntry
	(*emptypb.Empty)(nil),                 // 21: google.protobuf.Empty
}
var file_sqi_proto_depIdxs = []int32{
	0,  // 0: pb.PluginCapability.rpc:type_name -> pb.PluginCapability.RpcType
	1,  // 1: pb.PluginCapability.quota:type_name -> pb.PluginCapability.QuotaType
	2,  // 2: pb.PluginCapability.id:type_name -> pb.PluginCapability.IdType
	7,  // 3: pb.GetPluginCapabilitiesResponse.capabilities:type_name -> pb.PluginCapability
	3,  // 4: pb.QuotaTarget.scope:type_name -> pb.QuotaTarget.Scope
	9,  // 5: pb.SetQuotaRequest.target:type_name -> pb.QuotaTarget
	18, // 6: pb.SetQuotaRequest.parameters:type_name -> pb.SetQuotaRequest.ParametersEntry
	19, // 7: pb.SetQuotaResponse.info:type_name -> pb.SetQuotaResponse.InfoEntry
	9,  // 8: pb.GetQuotaRequest.target:type_name -> pb.QuotaTarget
	17, // 9: pb.GetQuotaResponse.entrie:type_name -> pb.QuotaEntry
	9,  // 10: pb.ClearQuotaRequest.target:type_name -> pb.QuotaTarget
	9,  // 11: pb.ListQuotasRequest.target:type_name -> pb.QuotaTarget
	17, // 12: pb.ListQuotasResponse.entries:type_name -> pb.QuotaEntry
	9,  // 13: pb.QuotaEntry.target:type_name -> pb.QuotaTarget
	20, // 14: pb.QuotaEntry.info:type_name -> pb.QuotaEntry.InfoEntry
	4,  // 15: pb.QuotaService.GetPluginInfo:input_type -> pb.PluginInfoRequest
	6,  // 16: pb.QuotaService.GetPluginCapabilities:input_type -> pb.GetPluginCapabilitiesRequest
	10, // 17: pb.QuotaService.SetQuota:input_type -> pb.SetQuotaRequest
	12, // 18: pb.QuotaService.GetQuota:input_type -> pb.GetQuotaRequest
	14, // 19: pb.QuotaService.ClearQuota:input_type -> pb.ClearQuotaRequest
	15, // 20: pb.QuotaService.ListQuotas:input_type -> pb.ListQuotasRequest
	10, // 21: pb.QuotaService.ValidateQuotaRequest:input_type -> pb.SetQuotaRequest
	5,  // 22: pb.QuotaService.GetPluginInfo:output_type -> pb.PluginInfoResponse
	8,  // 23: pb.QuotaService.GetPluginCapabilities:output_type -> pb.GetPluginCapabilitiesResponse
	11, // 24: pb.QuotaService.SetQuota:output_type -> pb.SetQuotaResponse
	13, // 25: pb.QuotaService.GetQuota:output_type -> pb.GetQuotaResponse
	21, // 26: pb.QuotaService.ClearQuota:output_type -> google.protobuf.Empty
	16, // 27: pb.QuotaService.ListQuotas:output_type -> pb.ListQuotasResponse
	21, // 28: pb.QuotaService.ValidateQuotaRequest:output_type -> google.protobuf.Empty
	22, // [22:29] is the sub-list for method output_type
	15, // [15:22] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_sqi_proto_init() }
func file_sqi_proto_init() {
	if File_sqi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sqi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPluginCapabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginCapability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPluginCapabilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuotaTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetQuotaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetQuotaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuotaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuotaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearQuotaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuotasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuotasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuotaEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sqi_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*PluginCapability_Rpc)(nil),
		(*PluginCapability_Quota)(nil),
		(*PluginCapability_Id)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sqi_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sqi_proto_goTypes,
		DependencyIndexes: file_sqi_proto_depIdxs,
		EnumInfos:         file_sqi_proto_enumTypes,
		MessageInfos:      file_sqi_proto_msgTypes,
	}.Build()
	File_sqi_proto = out.File
	file_sqi_proto_rawDesc = nil
	file_sqi_proto_goTypes = nil
	file_sqi_proto_depIdxs = nil
}
